// See all highfive.json configuration options at https://github.com/highfivedotnet/Bridge/wiki/global-configuration
{
  // Always build both minified and non-minified versions of the code so that resource for both versions are always included in the binary and so referencing projects can decide whether
  // to use the minified versions or the non-minified versions
  "outputFormatting": "Both",

  "resources": [

    // Include the JS that is compiled from the C# in this project - be sure to include non-minified AND minified version (and to include the meta data files required for reflection)
    // because Bridge will only include ".min.js" versions of resources when a project that references this is built in Release and will only include NON-".min.js" versions when built
    // in Debug (this is the default behaviour for projects that don't have any external resources to build into the binary but when a "resources" section is present in a highfive.json
    // file then that default behaviour is lost and must be opted back into - see suggestion 1 at the bottom of he opening comment on https://github.com/highfivedotnet/Bridge/issues/3991).
    {
      "name": "Tesserae.js",
      "files": [ "$(OutDir)highfive/Tesserae.js" ]
    },
    {
      "name": "Tesserae.meta.js",
      "files": [ "$(OutDir)highfive/Tesserae.meta.js" ]
    },
    {
      "name": "Tesserae.min.js",
      "files": [ "$(OutDir)highfive/Tesserae.min.js" ]
    },
    {
      "name": "Tesserae.meta.min.js",
      "files": [ "$(OutDir)highfive/Tesserae.meta.min.js" ]
    },

    //Because Bridge will monkey about with JS file names depending upon build configuration (only ".min.js" for Release builds and NO ".min.js" for Debug builds), we need to be a bit
    //careful with how external JS files are referenced. We COULD maintain minified and regular versions of all libraries in this project and then individually reference all of them
    //twice (once min'd and once not) in this section but that seems like a lot of work. An alternative is to bundle them together - once as a ".min.js" file and again as a non-".min.js"
    //file. This is still a bit of a faff because the file lists appear twice and we need to be careful to keep them in sync. Maybe Bridge will change the behaviour one day regarding the
    //file name changes - if there is no "jquery.js" file then it shouldn't rename "jquery.min.js" when in Debug configuration! (See https://github.com/highfivedotnet/Bridge/issues/3992).
    {
      "name": "Tesserae.Dependencies.js",
      "files": [
        "highfive/assets/js/simplebar.min.js",
        "highfive/assets/js/hotkeys.min.js"
      ],
      "output": "assets/js"
    },
    {
      "name": "Tesserae.Dependencies.min.js",
      "files": [
        "highfive/assets/js/simplebar.min.js",
        "highfive/assets/js/hotkeys.min.js"
      ],
      "output": "assets/js"
    },

    {
      //polyfill for ResizeObserver, only loaded if needed - mosaik will automatically remove the .dontload extension
      //if using Tesserae elsewhere need to remove it as well
      "name": "resizeobserver.js.dontload",
      "files": [ "highfive/assets/js/resizeobserver.js" ],
      "output": "assets/js"
    },

    // There is no technical requirement for the CSS files to be combined but it makes it clearer that their content relates to the combined JS content (and it makes the Bridge-generated
    // index.html file cleaner)
    {
      "name": "Tesserae.Dependencies.css",
      "files": [
        "highfive/assets/css/line-awesome.css",
        "highfive/assets/css/tesserae.lineawesome-fixes.css",
        "highfive/assets/css/simplebar.css",
        "highfive/assets/css/tesserae.common.css",
        "highfive/assets/css/tesserae.body.css",
        "highfive/assets/css/tesserae.button.css",
        "highfive/assets/css/tesserae.animations.css",
        "highfive/assets/css/tesserae.label.css",
        "highfive/assets/css/tesserae.textblock.css",
        "highfive/assets/css/tesserae.textbox.css",
        "highfive/assets/css/tesserae.card.css",
        "highfive/assets/css/tesserae.breadcrumb.css",
        "highfive/assets/css/tesserae.backgroundarea.css",
        "highfive/assets/css/tesserae.overflowset.css",
        "highfive/assets/css/tesserae.checkbox.css",
        "highfive/assets/css/tesserae.choice.css",
        "highfive/assets/css/tesserae.dropdown.css",
        "highfive/assets/css/tesserae.files.css",
        "highfive/assets/css/tesserae.contextmenu.css",
        "highfive/assets/css/tesserae.horizontalseparator.css",
        "highfive/assets/css/tesserae.editablelabel.css",
        "highfive/assets/css/tesserae.layer.css",
        "highfive/assets/css/tesserae.basiclist.css",
        "highfive/assets/css/tesserae.detailslist.css",
        "highfive/assets/css/tesserae.picker.css",
        "highfive/assets/css/tesserae.panel.css",
        "highfive/assets/css/tesserae.pivot.css",
        "highfive/assets/css/tesserae.progressindicator.css",
        "highfive/assets/css/tesserae.modal.css",
        "highfive/assets/css/tesserae.dialog.css",
        "highfive/assets/css/tesserae.nav.css",
        "highfive/assets/css/tesserae.navbar.css",
        "highfive/assets/css/tesserae.searchbox.css",
        "highfive/assets/css/tesserae.sectionstack.css",
        "highfive/assets/css/tesserae.slider.css",
        "highfive/assets/css/tesserae.spinner.css",
        "highfive/assets/css/tesserae.stack.css",
        "highfive/assets/css/tesserae.grid.css",
        "highfive/assets/css/tesserae.sidebar.css",
        "highfive/assets/css/tesserae.splitview.css",
        "highfive/assets/css/tesserae.toast.css",
        "highfive/assets/css/tesserae.toggle.css",
        "highfive/assets/css/tesserae.timeline.css"
      ],
      "output": "assets/css"
    },
    {
      "name": "la-brands-400.eot",
      "files": [ "highfive/assets/fonts/la-brands-400.eot" ],
      "output": "assets/fonts"
    },
    {
      "name": "la-brands-400.ttf",
      "files": [ "highfive/assets/fonts/la-brands-400.ttf" ],
      "output": "assets/fonts"
    },
    {
      "name": "la-brands-400.woff",
      "files": [ "highfive/assets/fonts/la-brands-400.woff" ],
      "output": "assets/fonts"
    },
    {
      "name": "la-brands-400.woff2",
      "files": [ "highfive/assets/fonts/la-brands-400.woff2" ],
      "output": "assets/fonts"
    },
    {
      "name": "la-regular-400.eot",
      "files": [ "highfive/assets/fonts/la-regular-400.eot" ],
      "output": "assets/fonts"
    },
    {
      "name": "la-regular-400.ttf",
      "files": [ "highfive/assets/fonts/la-regular-400.ttf" ],
      "output": "assets/fonts"
    },
    {
      "name": "la-regular-400.woff",
      "files": [ "highfive/assets/fonts/la-regular-400.woff" ],
      "output": "assets/fonts"
    },
    {
      "name": "la-regular-400.woff2",
      "files": [ "highfive/assets/fonts/la-regular-400.woff2" ],
      "output": "assets/fonts"
    },
    {
      "name": "la-solid-900.eot",
      "files": [ "highfive/assets/fonts/la-solid-900.eot" ],
      "output": "assets/fonts"
    },
    {
      "name": "la-solid-900.ttf",
      "files": [ "highfive/assets/fonts/la-solid-900.ttf" ],
      "output": "assets/fonts"
    },
    {
      "name": "la-solid-900.woff",
      "files": [ "highfive/assets/fonts/la-solid-900.woff" ],
      "output": "assets/fonts"
    },
    {
      "name": "la-solid-900.woff2",
      "files": [ "highfive/assets/fonts/la-solid-900.woff2" ],
      "output": "assets/fonts"
    }
  ],
  "cleanOutputFolderBeforeBuildPattern": "*.*",
  "loader": { "type": "Global" },
  "rules": {
    "anonymousType": "Plain",
    "arrayIndex": "Managed",
    "autoProperty": "Plain",
    "boxing": "Managed",
    "externalCast": "Plain",
    "inlineComment": "Plain",
    "integer": "Managed",
    "lambda": "Plain"
  }
}
